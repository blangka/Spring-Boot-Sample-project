plugins {
	id 'org.springframework.boot' version '2.5.7' //라이브러리 디펜던시 관리 기준이 된다.
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	//querydsl 추가
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	id 'java'
	id 'war'
}

group = 'com.hkmc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' //jpa, hibernate
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-devtools' //매번 html 변경 될때 마다 다시 부팅안해도 되도록
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6' //JPA 에서 쿼리 param 보기 편하도록 하는것
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	runtimeOnly 'com.h2database:h2' //local DB 로 하기 위해서
	runtimeOnly 'mysql:mysql-connector-java' // MYSQL
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.8' //Object Mapping용도

	//Security
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	//implementation 'org.springframework.security:spring-security-test'

	//querydsl 추가
	implementation 'com.querydsl:querydsl-jpa'

	//Swagger 2
	implementation 'com.google.guava:guava:31.0.1-jre'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝

tasks.named('test') {
	useJUnitPlatform()
}

tasks {
	processResources { duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE }
}